////////////////////////////////////////////////////////////////////////////////////
// Merlin API for Albion Online v1.0.332.98217-prod
////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;

using UnityEngine;

using Albion.Common.Time;

namespace Merlin.API.Direct
{
    /* Internal type: n5 */
    public partial struct Number
    {
        private static List<MethodInfo> _methodReflectionPool = new List<MethodInfo>();
        private static List<PropertyInfo> _propertyReflectionPool = new List<PropertyInfo>();
        
        private n5 _internal;
        
        #region Properties
        
        public n5 Number_Internal => _internal;
        
        #endregion
        
        #region Fields
        
        
        #endregion
        
        #region Methods
        
        public static Number FromDouble(System.Double A_0) => n5.e((System.Double)A_0);
        public static Number FromInt64(long A_0) => n5.f((long)A_0);
        public static Number FromRaw(long A_0) => n5.e((long)A_0);
        public long GetFractionalPart() => _internal.i();
        public System.Double GetFractions() => _internal.j();
        public long GetIntegerPart() => _internal.h();
        public System.Double ToDouble() => _internal.k();
        //public static bool TryParse(string A_0, out Number A_1) => n5.f((string)A_0, out A_1);
        //public static bool TryParseRaw(string A_0, out Number A_1) => n5.e((string)A_0, out A_1);
        
        #endregion
        
        #region Constructor
        
        public Number(n5 instance)
        {
            _internal = instance;
        }
        
        static Number()
        {
            
        }
        
        #endregion
        
        #region Conversion
        
        public static implicit operator n5(Number instance)
        {
            return instance._internal;
        }
        
        public static implicit operator Number(n5 instance)
        {
            return new Number(instance);
        }
        #endregion
    }
}
